{"ast":null,"code":"var _jsxFileName = \"/home/ibm/Documents/newstart/OSR_8-react_typescript_MUI/User/e-commerce-Mern/client/src/component/Input.tsx\";\nimport { TextField } from \"@mui/material\";\nimport React from \"react\";\n// import { text } from \"stream/consumers\"\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Input({\n  type,\n  label,\n  style,\n  emailid,\n  name,\n  variant\n}) {\n  const emailValueLogin = event => {\n    if (emailid) {\n      const {\n        name,\n        value\n      } = event.target;\n      emailid(name, value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      type: type,\n      label: label,\n      name: name,\n      sx: {\n        ...style\n      },\n      variant: variant,\n      onChange: event => emailValueLogin(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["TextField","React","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","type","label","style","emailid","name","variant","emailValueLogin","event","value","target","children","sx","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ibm/Documents/newstart/OSR_8-react_typescript_MUI/User/e-commerce-Mern/client/src/component/Input.tsx"],"sourcesContent":["import { TextField } from \"@mui/material\"\r\nimport React, { ChangeEvent } from \"react\"\r\n// import { text } from \"stream/consumers\"\r\n\r\ninterface props {\r\n  type: string\r\n  label: string\r\n  style: any\r\n  emailid?: (name: string, value: string) => void\r\n  name: string\r\n  variant?: \"outlined\" | \"standard\" | \"filled\"\r\n  \r\n}\r\n\r\nexport default function Input({\r\n  type,\r\n  label,\r\n  style,\r\n  emailid,\r\n  name,\r\n  variant,\r\n  \r\n}: props) {\r\n  const emailValueLogin = (\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    if (emailid) {\r\n      const {name,value} = event.target\r\n      emailid(name,value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        type={type}\r\n        label={label}\r\n        name={name}\r\n        sx={{ ...style }}\r\n        variant={variant}\r\n        onChange={(event) => emailValueLogin(event)}\r\n      \r\n        \r\n        \r\n      />\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,OAAOC,KAAK,MAAuB,OAAO;AAC1C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAYA,eAAe,SAASC,KAAKA,CAAC;EAC5BC,IAAI;EACJC,KAAK;EACLC,KAAK;EACLC,OAAO;EACPC,IAAI;EACJC;AAEK,CAAC,EAAE;EACR,MAAMC,eAAe,GACnBC,KAA0D,IACvD;IACH,IAAIJ,OAAO,EAAE;MACX,MAAM;QAACC,IAAI;QAACI;MAAK,CAAC,GAAGD,KAAK,CAACE,MAAM;MACjCN,OAAO,CAACC,IAAI,EAACI,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA,CAACH,SAAS;MACRO,IAAI,EAAEA,IAAK;MACXC,KAAK,EAAEA,KAAM;MACbG,IAAI,EAAEA,IAAK;MACXO,EAAE,EAAE;QAAE,GAAGT;MAAM,CAAE;MACjBG,OAAO,EAAEA,OAAQ;MACjBO,QAAQ,EAAGL,KAAK,IAAKD,eAAe,CAACC,KAAK;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAI7C;EAAC,gBACF,CAAC;AAEP;AAACC,EAAA,GAjCuBlB,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}